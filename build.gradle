apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'checkstyle'
apply plugin: 'pmd'
apply plugin: 'findbugs'

sourceCompatibility = "$jdkVersion"

configurations.all {
    // Check for updates every build
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

repositories {
	mavenCentral()
	maven { url "https://jitpack.io" }
}

dependencies {
	compile "org.danilopianini:javalib-java7:$javalib7Version"
	compile "com.miglayout:miglayout:$migLayoutVersion"
	compile "jgoodies:forms:$formsVersion"
	compile("com.github.gscaparrotti:BenderModel:develop-SNAPSHOT") {
		changing = true	
	}
	compile files("./res")
	testCompile 'junit:junit:4.12'
	testCompile group: 'com.vmlens', name: 'concurrent-junit', version: '1.0.2'
    pmd(
        "net.sourceforge.pmd:pmd-core:$pmdVersion",
        "net.sourceforge.pmd:pmd-vm:$pmdVersion",
        "net.sourceforge.pmd:pmd-plsql:$pmdVersion",
        "net.sourceforge.pmd:pmd-jsp:$pmdVersion",
        "net.sourceforge.pmd:pmd-xml:$pmdVersion",
        "net.sourceforge.pmd:pmd-java:$pmdVersion"
    )
}

task wrapper(type: Wrapper) {
    gradleVersion = '3.2'
}

findbugs {
	ignoreFailures = true
	effort = "default"
	reportLevel = "medium"
}

tasks.withType(FindBugs) {
	classes = fileTree('build/classes/main/')
	reports {
		xml.enabled = false
		html.enabled = true
	}
}

checkstyle {
	ignoreFailures = true
	configFile = new File("style.xml")
}

checkstyleMain << {
    ant.xslt(in: reports.xml.destination,
             style: new File("$project.projectDir/checkstyle-noframes-sorted.xsl"),
             out: new File(reports.xml.destination.parent, 'main.html'))
}

checkstyleTest << {
    ant.xslt(in: reports.xml.destination,
             style: new File("$project.projectDir/checkstyle-noframes-sorted.xsl"),
             out: new File(reports.xml.destination.parent, 'main.html'))
}

pmd {
	ignoreFailures = true
	ruleSets = []
	ruleSetFiles = files("pmd.xml")
	targetJdk = pmdTargetJdk
	toolVersion = pmdVersion
}

tasks.withType(Pmd) {
	reports {
		xml.enabled = false
		html.enabled = true
	}
}

defaultTasks 'wrapper', 'clean', 'check', 'build', 'assemble'
